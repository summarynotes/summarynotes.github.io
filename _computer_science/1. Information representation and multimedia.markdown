---
layout: note
title: 1. Information representation and multimedia
subject: computer_science
---
<u><b>Chapter 1: Information representation and multimedia</b></u>

## Decimal and binary prefix

- Decimal prefix:
    - kilo(K) = 10<sup>3</sup>
    - mega(M) = 10<sup>6</sup>
    - giga(G) = 10<sup>9</sup>
    - tera(T) = 10<sup>12</sup>
- Binary prefix:
    - kibi(Ki) = 2<sup>10</sup>
    - mebi(Mi) = 2<sup>20</sup>
    - gibi(Gi) = 2<sup>30</sup>
    - teib(Ti) = 2<sup>40</sup>

## Internal coding of numbers

- Coding for integers

- Two methods:
    - Sign-magnitude: 0 is used to represent + and 1 for -
    - Twos complement

- Advantage of twos complement:
    - Only one representation of zero.
    - It simplifies subtraction. Number being subtracted is converted to two's complement form and added to other number.
    - Two's complement values are self-complementary. i.e. Twos complement can be taken to change the sign of number.
    - You can add any number of leading ones to positive and any leading zeros to negative value without changing value.

- Binary coded decimal.
    - Useful when single digit is to be stored or transmitted.
    - The digit is converted to binary and stored.
    - If two BCD digits per byte, it is called packed BCD.
    - If one BCD digit per byte, it is called unpacked BCD.

## Internal coding of text

- ASCII code:
    - 7-bits => 2<sup>7</sup> = 128 combinations.
    - Limited number of non-printing or conttrol characters.
    - Only english.
    - Numbers and letters are in sequence.

- Unicode(eg. UTF-8):
    - 1st byte used for ASCII: when first bit is 0
    - Can be upto 4 bytes long but some bytes are used by pre-defined format.
    - Various languages
    - Support for emojis
    - More symbols

## Representing images

- Types:
    - Vector image:
        - Consists of drawing list that has command for drawing object to be included in the image.
        - Each command has a list of attributes like shape, color, thickness of line etc.
        - *Can be scaled up* as dimensions are defined relatively.
    - Bitmaps:
        - Image is represented as 2d matrix of pixels.
        - Pixel is the smallest identifiable component of bitmap image. Each pixel has a position and color.
        - *Color depth* is number of bits used to represent a pixel.
        - *Bit depth* is the number of bits used to store each of red, green and blue primary colors in RGB color scheme.
        - *Image resolution* is number of pixels in a image.
        - Bitmap image cannot be scaled up. If that is done, individual pixels can be distinguished.

> Not every image can be defined as a collection of shapes/features so, vector graphics is not practical in every case.

> Vector graphics is often used for logos and bitmap for other daily task.

## Representing sound

> Sound we hear is continuous and irregular and representing it requires practically infinite data. So, sampling is done.

- *Sampling* is the process of taking value from analogue signal at regular interval to make it digital.
- Sampling is done by ADC: Analog to digital converter.
- Sample refers to one such value taken from analogue signal.
- *Sampling resolution* is the number of bits used to represent a sample.
- *Sampling rate* is the number of samples taken per second.

> Nyquist's theorem => Sampling must be done with a frequency at least twice the highest frequency of the sound being sampled.

> Videos are collection of images + sound.

## Compression techniques.

> Compression refers to reduction in file size.

- Reasons:
    - Less storage requirement.
    - Lower download/transmission time.
    - Lower processing time.

- Types:
    - Lossless compression: no information is lost
    - Lossy compression: some information is lost

- Examples:
    - Lossy compression:
        - Image: Cropping, reducing color depth, etc.
        - Video: reducing resolution, reducing frame rate etc.
        - Audio: reducing sampling rate, reducing sampling resolution etc.
    - Lossless compression:
        - Run Length Encoding(RLE): Number of times a byte is represented and the byte are sent together.
        - Huffman encoding: Using less bits to represent most frequently used values. None of the codes begin with sequence of bits representing shorter codes. A table is also required.
    
> Mostly RLE is used for bitmap images, Huffman encoding for audio.

> Lossy compressions cannot be used for texts.

---